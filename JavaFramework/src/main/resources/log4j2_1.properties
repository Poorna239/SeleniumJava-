status = error
dest = err
name = PropertiesConfig

# Give directory path where log files should get stored
property.filename = logs/rollingtest.log

filter.threshold.type = ThresholdFilter
filter.threshold.level = debug

# ConsoleAppender will print logs on console
appender.console.type = Console
appender.console.name = STDOUT
appender.console.layout.type = PatternLayout
# Specify the pattern of the logs
appender.console.layout.pattern = %d{yyyy-MM-dd HH:mm:ss.SSS} %level [%t] [%c] [%M] [%l] - %msg%n
appender.console.filter.threshold.type = ThresholdFilter
appender.console.filter.threshold.level = debug

# RollingFileAppender will print logs in file which can be rotated based on time or size
appender.rolling.type = RollingFile
appender.rolling.name = RollingFile
appender.rolling.fileName = ${filename}
appender.rolling.filePattern = target/rolling2/test1-%d{MM-dd-yy-HH-mm-ss}-%i.log.gz
appender.rolling.layout.type = PatternLayout
appender.rolling.layout.pattern = %d %p %C{1.} [%t] %m%n
appender.rolling.policies.type = Policies

appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
appender.rolling.policies.time.interval = 2
appender.rolling.policies.time.modulate = true
appender.rolling.policies.size.type = SizeBasedTriggeringPolicy
appender.rolling.policies.size.size=100MB
appender.rolling.strategy.type = DefaultRolloverStrategy
appender.rolling.strategy.max = 5

# Mention package name here in place of example. Classes in this package or subpackages will use ConsoleAppender and RollingFileAppender for logging
logger.rolling.name = log4j_Demo
logger.rolling.level = debug
logger.rolling.additivity = false
logger.rolling.appenderRef.rolling.ref = RollingFile
logger.rolling.appenderRef.console.ref = STDOUT


# Configure root logger for logging error logs in classes which are in package other than above specified package
# To off the logging set the rootLogger.level = off  
rootLogger.level = debug
rootLogger.appenderRef.stdout.ref = STDOUT